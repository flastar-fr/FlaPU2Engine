#include "common.hpp"

#include <cstdint>

uint8_t ALTERNATIVE_TEST_VALUE = 30;
uint8_t NULL_VALUE = 0;

uint8_t FIRST_REGISTER_TO_ADD = 1;
uint8_t SECOND_REGISTER_TO_ADD = 2;
uint8_t REGISTER_RESULT = 3;
uint8_t FIRST_REGISTER = 0;

std::vector<Token> VALID_OPERANDS_CLASSIC = {Token(FIRST_REGISTER_TO_ADD, ValueType::REGISTER),
    Token(SECOND_REGISTER_TO_ADD, ValueType::REGISTER),
    Token(REGISTER_RESULT, ValueType::REGISTER)};
std::vector<Token> VALID_OPERANDS_0_RESULT = {Token(FIRST_REGISTER_TO_ADD, ValueType::REGISTER),
    Token(SECOND_REGISTER_TO_ADD, ValueType::REGISTER),
    Token(FIRST_REGISTER, ValueType::REGISTER)};
std::vector<Token> VALID_OPERANDS_0_OPERAND_RIGHT = {Token(FIRST_REGISTER_TO_ADD, ValueType::REGISTER),
    Token(FIRST_REGISTER, ValueType::REGISTER),
    Token(REGISTER_RESULT, ValueType::REGISTER)};
std::vector<Token> VALID_OPERANDS_0_OPERAND_LEFT = {Token(FIRST_REGISTER, ValueType::REGISTER),
    Token(SECOND_REGISTER_TO_ADD, ValueType::REGISTER),
    Token(REGISTER_RESULT, ValueType::REGISTER)};